{"version":3,"sources":["store/api/index.js","store/api/findLocationByLatLng.js","store/api/findWeatherById.js","store/api/defaultSearch.js","store/actions.js","store/sagas/Weather.js","store/sagas/ApiErrors.js","store/sagas/index.js","store/reducers/Weather.js","components/Weather.js","components/Header.js","components/Wrapper.js","components/Dashboard.js","components/MapDrone.js","components/PlotDrone.js","components/DisplayPanel.js","App.js","store/index.js","serviceWorker.js","index.js"],"names":["api","findLocationByLatLng","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","latitude","longitude","latlon","response","json","wrap","_context","prev","next","join","fetch","concat","sent","ok","abrupt","error","code","status","data","stop","_x","_x2","apply","this","arguments","findWeatherbyId","id","defaultSearch","FETCH_WEATHER","API_ERROR","WEATHER_DATA_RECEIVED","WEATHER_ID_RECEIVED","DEFAULT_FETCH_WEATHER","DEFAULT_WEATHER_DATA_RECEIVED","watchWeatherIdReceived","watchFetchWeather","watchDefaultSearch","watchAppLoad","action","call","API","put","type","actions","cancel","_marked","_ref2","location","_context2","console","log","woeid","_marked2","_ref3","latestUpdate","fullDroneReading","_context3","length","_marked3","_context4","all","takeEvery","_marked4","sagas_Weather","apiErrorReceived","watchApiError","toast","ApiErrors_marked","ApiErrors_marked2","ApiErrors","sagas","toConsumableArray","WeatherSagas","initialState","loading","weatherId","name","temperature","metric","weather_state_name","timestamp","accuracy","handlers","_handlers","defineProperty","state","objectSpread","c","weather","consolidated_weather","the_temp","latt_long","title","_latt_long$split","split","_latt_long$split2","slicedToArray","temperatureinCelsius","temperatureinFahrenheit","toFixed","reducers_Weather","undefined","handler","Chip","withStyles","theme","root","background","palette","secondary","main","label","color","primary","ChipRaw","Weather","props","onLoad","_this$props","react_default","createElement","LinearProgress_default","Weather_Chip","Component","connect","ownProps","_state$weather","dispatch","grow","flexGrow","classes","AppBar_default","position","Toolbar_default","Typography_default","variant","className","components_Weather","wrapper","height","children","DashTable","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","update","timer","setState","setInterval","Math","floor","random","prevProps","prevState","clearInterval","interval","randomTimer","Table_default","table","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","component","scope","Number","React","minWidth","mapStyles","width","MapDrone","onMarkerClick","marker","e","selectedPlace","activeMarker","showingInfoWindow","onMapClicked","onClose","marginTop","dist","google","onClick","zoom","style","initialCenter","lat","lng","visible","textAlign","GoogleApiWrapper","apiKey","process","PlotDrone","fullDroneReadingData","map","value","moment","format","config","chart","xAxis","tickInterval","categories","yAxis","text","labels","formatter","tooltip","crosshairs","shared","plotOptions","line","radius","lineColor","lineWidth","animation","series","ReactHighcharts_default","DisplayPanel","Grid_default","container","spacing","item","xs","justify","Paper_default","Dashboard","components_MapDrone","components_PlotDrone","overflowX","store","rootReducer","combineReducers","weatherReducer","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","middlewares","applyMiddleware","createStore","forEach","run","createMuiTheme","typography","useNextVariants","App","styles","CssBaseline_default","react_redux_es","components_Wrapper","components_Header","components_DisplayPanel","lib","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.87bc8c80.chunk.js","sourcesContent":["import findLocationByLatLng from \"./findLocationByLatLng\";\nimport findWeatherbyId from \"./findWeatherById\";\nimport defaultSearch from \"./defaultSearch\";\n\nexport default {\n  findLocationByLatLng,\n  findWeatherbyId,\n  defaultSearch\n};\n","import \"isomorphic-fetch\";\n\nconst findLocationByLatLong = async (latitude, longitude) => {\n  const latlon = [latitude, longitude].join(\",\");\n  // Using the create-react-app's proxy for CORS issues\n  const response = await fetch(\n    `https://react-assessment-api.herokuapp.com/api/weather/location/search/?lattlong=${latlon}`\n  );\n  if (!response.ok) {\n    return { error: { code: response.status } };\n  }\n  const json = await response.json();\n  return { data: json };\n};\n\nexport default findLocationByLatLong;\n","import \"isomorphic-fetch\";\n\nconst findWeatherbyId = async id => {\n  // Using the create-react-app's proxy for CORS issues\n  const response = await fetch(\n    `https://react-assessment-api.herokuapp.com/api/weather/location/${id}/`\n  );\n  if (!response.ok) {\n    return { error: { code: response.status } };\n  }\n  const json = await response.json();\n  return { data: json };\n};\n\nexport default findWeatherbyId;\n","import \"isomorphic-fetch\";\n\nconst defaultSearch = async () => {\n\n  const response = await fetch(\n    \"https://react-assessment-api.herokuapp.com/api/drone\"\n  );\n  if (!response.ok) {\n    return { error: { code: response.status } };\n  }\n  const json = await response.json();\n  return { data: json };\n};\n\nexport default defaultSearch;\n","export const FETCH_WEATHER = \"COMMAND/FETCH_WEATHER_FOR_LAT_LNG\";\nexport const API_ERROR = \"EVENT/API_ERROR_RECEIVED\";\nexport const WEATHER_DATA_RECEIVED = \"EVENT/WEATHER_DATA_RECEIVED\";\nexport const WEATHER_ID_RECEIVED = \"EVENT/WEATHER_ID_RECEIVED\";\n\nexport const DEFAULT_FETCH_WEATHER = \"COMMAND/DEFAULT_FETCH_WEATHER\";\nexport const DEFAULT_WEATHER_DATA_RECEIVED = \"EVENT/DEFAULT_WEATHER_DATA_RECEIVED\"\n","import { takeEvery, call, put, cancel, all } from \"redux-saga/effects\";\nimport API from \"../api\";\nimport * as actions from \"../actions\";\n\n/*\n  1. The weather service requires us to make a search by lat/lng to find its\n  weather ID.\n  2. We then use that weather ID to get the weather.\n\n  This process is pretty well defined here with a saga.\n\n  call invokes a method\n  put dispatches an action\n  takeEvery watches actions and executes a function\n\n  Also -- the `*` in function is important; turns it into a \"generator\"\n\n*/\n\nfunction* watchWeatherIdReceived(action) {\n  const { id } = action;\n  const { error, data } = yield call(API.findWeatherbyId, id);\n  if (error) {\n    yield put({ type: actions.API_ERROR, code: error.code });\n    yield cancel();\n    return;\n  }\n  yield put({ type: actions.WEATHER_DATA_RECEIVED, data });\n}\n\nfunction* watchFetchWeather(action) {\n  const { latitude, longitude } = action;\n  const { error, data } = yield call(\n    API.findLocationByLatLng,\n    latitude,\n    longitude\n  );\n  if (error) {\n    console.log({ error });\n    yield put({ type: actions.API_ERROR, code: error.code });\n    yield cancel();\n    return;\n  }\n  const location = data[0] ? data[0].woeid : false;\n  if (!location) {\n    yield put({ type: actions.API_ERROR });\n    yield cancel();\n    return;\n  }\n  yield put({ type: actions.WEATHER_ID_RECEIVED, id: location });\n}\n\nfunction* watchDefaultSearch(action) {\n  const { error, data } = yield call(API.defaultSearch);\n  if (error) {\n    yield put({ type: actions.API_ERROR, code: error.code });\n    yield cancel();\n    return;\n  }\n  const latestUpdate = data.data[data.data.length-1];\n  const fullDroneReading = data.data\n  yield put({ type: actions.DEFAULT_WEATHER_DATA_RECEIVED, latestUpdate, fullDroneReading});\n}\n\nfunction* watchAppLoad() {\n  yield all([\n    takeEvery(actions.FETCH_WEATHER, watchFetchWeather),\n    takeEvery(actions.WEATHER_ID_RECEIVED, watchWeatherIdReceived),\n    takeEvery(actions.DEFAULT_FETCH_WEATHER, watchDefaultSearch),\n  ]);\n}\n\nexport default [watchAppLoad];\n","import { takeEvery, call } from \"redux-saga/effects\";\nimport * as actions from \"../actions\";\nimport { toast } from \"react-toastify\";\n\nfunction* apiErrorReceived(action) {\n  yield call(toast.error, `Error Received: ${action.code}`);\n}\n\nfunction* watchApiError() {\n  yield takeEvery(actions.API_ERROR, apiErrorReceived);\n}\n\nexport default [watchApiError];\n","import WeatherSagas from \"./Weather\";\nimport ApiErrors from \"./ApiErrors\";\n\nexport default [...ApiErrors, ...WeatherSagas];\n","import * as actions from \"../actions\";\n\nconst initialState = {\n  loading: false,\n  weatherId: null,\n  name: \"\",\n  temperature: \"\",\n  metric: null,\n  weather_state_name: \"\",\n  latitude: null,\n  longitude: null,\n  data: {},\n  timestamp : \"\",\n  accuracy : null,\n  fullDroneReading : [],\n};\n\nconst toF = c => ((c * 9) / 5 + 32).toFixed(1);\n\nconst startLoading = (state, action) => {\n  return { ...state, loading: true };\n};\n\nconst weatherIDReceived = (state, action) => {\n  return { ...state, weatherId: action.id };\n};\n\nconst weatherDataRecevied = (state, action) => {\n  const { data } = action;\n  if (!data[\"consolidated_weather\"]) return state;\n  const weather = data.consolidated_weather[0];\n  const { weather_state_name, the_temp } = weather;\n  const { latt_long, title: name } = data;\n  const [latitude, longitude] = latt_long.split(\",\");\n\n  return {\n    ...state,\n    loading: false,\n    latitude,\n    longitude,\n    temperatureinCelsius: the_temp,\n    temperatureinFahrenheit: toF(the_temp),\n    weather_state_name,\n    name,\n    data: action.data,\n  };\n};\n\nconst defaultLoading = (state, action) => {\n  return {...state};\n};\n\nconst defaultWeatherDataReceived = (state, action) => {\n  const latestUpdate = action.latestUpdate;\n  const fullDroneReading = action.fullDroneReading;\n  const {\n    timestamp,\n    accuracy,\n    latitude,\n    longitude,\n    metric\n  } = latestUpdate;\n\n  return {\n    ...state,\n    timestamp,\n    accuracy,\n    latitude,\n    longitude,\n    metric,\n    fullDroneReading\n  };\n};\n\nconst handlers = {\n  [actions.FETCH_WEATHER]: startLoading,\n  [actions.WEATHER_ID_RECEIVED]: weatherIDReceived,\n  [actions.WEATHER_DATA_RECEIVED]: weatherDataRecevied,\n  [actions.DEFAULT_FETCH_WEATHER]: defaultLoading,\n  [actions.DEFAULT_WEATHER_DATA_RECEIVED]: defaultWeatherDataReceived,\n};\n\nexport default (state = initialState, action) => {\n  const handler = handlers[action.type];\n  if (typeof handler === \"undefined\") return state;\n  return handler(state, action);\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport ChipRaw from \"@material-ui/core/Chip\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst cardStyles = theme => ({\n  root: {\n    background: theme.palette.secondary.main\n  },\n  label: {\n    color: theme.palette.primary.main\n  }\n});\nconst Chip = withStyles(cardStyles)(ChipRaw);\n\nclass Weather extends Component {\n  componentDidMount() {\n    this.props.onLoad();\n  }\n  render() {\n    const {\n      loading,\n      name,\n      weather_state_name,\n      temperatureinFahrenheit\n    } = this.props;\n    if (loading) return <LinearProgress />;\n    return (\n      <Chip\n        label={`Weather in ${name}: ${weather_state_name} and ${temperatureinFahrenheit}°`}\n      />\n    );\n  }\n}\n\nconst mapState = (state, ownProps) => {\n  const {\n    loading,\n    name,\n    weather_state_name,\n    temperatureinFahrenheit\n  } = state.weather;\n  return {\n    loading,\n    name,\n    weather_state_name,\n    temperatureinFahrenheit\n  };\n};\n\nconst mapDispatch = dispatch => ({\n  onLoad: () =>\n    dispatch({\n      type: actions.FETCH_WEATHER,\n      longitude: -95.3698,\n      latitude: 29.7604\n    })\n});\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(Weather);\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Weather from \"./Weather\";\n\nconst styles = {\n  grow: {\n    flexGrow: 1\n  }\n};\n\nconst Header = props => {\n  const { classes } = props;\n\n  const name = \"Ziqing Wang's\";\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n          {name} EOG React Visualization Assessment\n        </Typography>\n        <Weather />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default withStyles(styles)(Header);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  wrapper: {\n    background: theme.palette.background.main,\n    height: \"100vh\"\n  }\n});\n\nconst Wrapper = props => {\n  const { classes } = props;\n  return <div className={classes.wrapper}>{props.children}</div>;\n};\n\nexport default withStyles(styles)(Wrapper);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions\";\n\nconst styles = theme => ({\n  table: {\n    minWidth: 700,\n  },\n});\n\nclass DashTable extends React.Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      update: 0,\n      timer: null\n    }\n  }\n\n  componentDidMount() {\n    this.props.onLoad();\n    this.setState({\n      timer: setInterval(this.props.onLoad, 1000)\n    });\n  }\n\n  randomTimer() {\n    const newTime = [3000, 4000][Math.floor(2 * Math.random())];\n    return newTime;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.timestamp !== prevProps.timestamp) {\n        if (this.state.timer) {\n          this.setState({\n            timer : clearInterval(this.state.timer)\n          });\n        }\n        const interval = this.randomTimer()\n        this.setState({\n          update: interval/1000,\n          timer: setInterval(this.props.onLoad, interval)\n        });\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    const {\n      latitude,\n      longitude,\n      metric,\n      accuracy\n    } = this.props;\n    if (!metric) return <LinearProgress />;\n        return (\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\">Latitude</TableCell>\n                <TableCell align=\"center\">Logitude</TableCell>\n                <TableCell align=\"center\">Temperature (F°)</TableCell>\n                <TableCell align=\"center\">Last Updated</TableCell>\n                <TableCell align=\"center\">Accuracy</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n                <TableRow>\n                  <TableCell align=\"center\" component=\"th\" scope=\"row\">{latitude}</TableCell>\n                  <TableCell align=\"center\">{longitude}</TableCell>\n                  <TableCell align=\"center\">{metric}</TableCell>\n                  <TableCell align=\"center\">{this.state.update} seconds ago</TableCell>\n                  <TableCell align=\"center\">{Number(accuracy).toFixed(5)}%</TableCell>\n                </TableRow>\n            </TableBody>\n          </Table>\n    )\n  }\n};\n\nconst mapState = (state, ownProps) => {\n  const {\n    latitude,\n    longitude,\n    metric,\n    timestamp,\n    accuracy\n  } = state.weather;\n  return {\n    latitude,\n    longitude,\n    metric,\n    timestamp,\n    accuracy\n  };\n};\n\nconst mapDispatch = dispatch => ({\n  onLoad: () =>\n    dispatch({\n      type: actions.DEFAULT_FETCH_WEATHER\n    })\n});\n\nDashTable = withStyles(styles)(DashTable);\n\nexport default connect(mapState,mapDispatch)(DashTable);\n","import React from 'react';\nimport { GoogleApiWrapper, InfoWindow, Marker, Map } from 'google-maps-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport '../static/styles/mapDrone.css';\nimport Typography from \"@material-ui/core/Typography\";\n\nconst mapStyles = {\n  width: '450px',\n  height: '400px'\n};\n\nconst styles = theme => ({\n  marginTop: {\n    marginTop: '20px',\n    textAlign: 'left',\n    width: '80%',\n  },\n});\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nclass MapDrone extends React.Component {\n\n  constructor (props) {\n    super(props);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n      }\n  }\n\n  onMarkerClick = (props, marker, e) => {\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n  };\n\n  onMapClicked = (props) => {\n  if (this.state.showingInfoWindow) {\n    this.setState({\n      showingInfoWindow: false,\n      activeMarker: null\n    })\n    }\n  };\n\n  onClose = (props) => {\n  if (this.state.showingInfoWindow) {\n    this.setState({\n      showingInfoWindow: false,\n      activeMarker: null\n    })\n    }\n  };\n\n  render () {\n    const { classes } = this.props;\n    const {\n      latitude,\n      longitude,\n      metric,\n      accuracy\n    } = this.props;\n    return (\n      <div className=\"mapWrapper\">\n      <Typography component=\"h6\" variant=\"h5\" className={classes.marginTop}>\n        Real-time drone position\n      </Typography>\n      <Map\n        google={this.props.google}\n        onClick={this.onMapClicked}\n        zoom={4}\n        style={mapStyles}\n        initialCenter={{ lat: 29.7604, lng: -95.3698 }}\n      >\n        { metric ? (<Marker\n          position={{lat: latitude, lng: longitude}}\n          onClick={this.onMarkerClick}\n          name={'Current Drone reading'}\n        />): null}\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div className=\"informationWindow\">\n            <p><strong>Lat:  </strong>{latitude}</p>\n            <p><strong>Long:  </strong>{longitude}</p>\n            <p><strong>Temperature:  </strong>{metric} F°</p>\n            <p><strong>Accuracy:  </strong>{Number(accuracy).toFixed(5)}%</p>\n          </div>\n        </InfoWindow>\n      </Map>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state, ownProps) => {\n  const {\n    latitude,\n    longitude,\n    metric,\n    timestamp,\n    accuracy\n  } = state.weather;\n  return {\n    latitude,\n    longitude,\n    metric,\n    timestamp,\n    accuracy\n  };\n};\n\nMapDrone = withStyles(styles)(MapDrone);\n\nMapDrone =  GoogleApiWrapper(\n  (props) => ({\n    apiKey: API_KEY\n  }\n))(MapDrone);\n\nexport default connect(mapState)(MapDrone);\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport moment from \"moment\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from '@material-ui/core/styles';\nimport ReactHighcharts from 'react-highcharts';\nimport '../static/styles/plotDrone.css';\n\nconst styles = theme => ({\n  marginTop: {\n    marginTop: '20px',\n    width: '80%',\n  },\n});\n\nclass PlotDrone extends React.Component {\n\n  render() {\n    const { classes } = this.props;\n    const {\n      fullDroneReading\n    } = this.props;\n    const fullDroneReadingData = fullDroneReading.map(value => ([moment(value['timestamp']).format('MMMM Do YYYY, h:mm:ss a'), Number(Number(value['metric']).toFixed(4))]));\n    const config = {\n      chart: {\n        type: 'line'\n      },\n      title : \"\",\n      xAxis: {\n        tickInterval: 75,\n        categories: fullDroneReading.map(value=>moment(value['timestamp']).format('MMMM Do YYYY, h:mm:ss a'))\n      },\n      yAxis: {\n        title: {\n          text: 'Temperature (F°)'\n        },\n        labels: {\n          formatter: function() {\n            return this.value + '°';\n          }\n        }\n      },\n      tooltip: {\n        crosshairs: true,\n        shared: true\n      },\n      plotOptions: {\n        line: {\n          marker: {\n            radius: 4,\n            lineColor: '#666666',\n            lineWidth: 1\n          },\n        animation: false\n        }\n      },\n      series: [{\n        name: 'Drone',\n        data: fullDroneReadingData\n      }]\n    };\n\n  return (\n    <div className=\"droneChart\">\n    <Typography component=\"h6\" variant=\"h5\" className={classes.marginTop}>\n      Drone temperature\n    </Typography>\n      <ReactHighcharts config={config}/>\n    </div>\n  );\n}\n}\n\nconst mapState = (state, ownProps) => {\n  const {\n    fullDroneReading\n  } = state.weather;\n  return {\n    fullDroneReading\n  };\n};\n\nPlotDrone = withStyles(styles)(PlotDrone);\n\nexport default connect(mapState)(PlotDrone);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Dashboard from \"./Dashboard\";\nimport MapDrone from \"./MapDrone\";\nimport PlotDrone from \"./PlotDrone\";\n\nconst styles = theme => ({\n  root: {\n    width: '80%',\n    overflowX: 'auto',\n    marginTop: '10px',\n  },\n  marginTop: {\n    marginTop: '10px',\n    width: '80%',\n  },\n});\n\nclass DisplayPanel extends React.Component {\n\n  render() {\n    const { classes } = this.props;\n      return (\n        <div>\n      <Grid container spacing={24}>\n      <Grid item xs={4}>\n      </Grid>\n        <Grid container item xs={12} justify=\"center\">\n          <Typography component=\"h6\" variant=\"h5\" className={classes.marginTop}>\n        Real-time drone reading\n          </Typography>\n          <Paper className={classes.root}>\n            <Dashboard />\n          </Paper>\n        </Grid>\n        <Grid container spacing={0} justify=\"space-between\">\n        <Grid item xs={6}>\n          <MapDrone />\n        </Grid>\n        <Grid item xs={6}>\n          <PlotDrone />\n        </Grid>\n        </Grid>\n      </Grid>\n        </div>\n    )\n  }\n};\n\nexport default DisplayPanel = withStyles(styles)(DisplayPanel);\n","import React from \"react\";\nimport createStore from \"./store\";\nimport { Provider } from \"react-redux\";\nimport { ToastContainer } from \"react-toastify\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Header from \"./components/Header\";\nimport Wrapper from \"./components/Wrapper\";\nimport DisplayPanel from \"./components/DisplayPanel\";\n\nconst store = createStore();\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  },\n  palette: {\n    primary: {\n      main: \"rgb(39,49,66)\"\n    },\n    secondary: {\n      main: \"rgb(197,208,222)\"\n    },\n    background: {\n      main: \"rgb(226,231,238)\"\n    }\n  }\n});\n\nconst App = props => (\n  <MuiThemeProvider theme={theme}>\n    <CssBaseline />\n    <Provider store={store}>\n      <Wrapper>\n        <Header />\n        <DisplayPanel />\n        <ToastContainer />\n      </Wrapper>\n    </Provider>\n  </MuiThemeProvider>\n);\n\nexport default App;\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport sagas from \"./sagas\";\nimport weatherReducer from \"./reducers/Weather\";\n\nexport default () => {\n  const rootReducer = combineReducers({\n    weather: weatherReducer\n  });\n\n  const composeEnhancers = composeWithDevTools({});\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = applyMiddleware(sagaMiddleware);\n  const store = createStore(rootReducer, composeEnhancers(middlewares));\n\n  sagas.forEach(sagaMiddleware.run);\n\n  return store;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}